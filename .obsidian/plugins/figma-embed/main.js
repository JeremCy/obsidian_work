/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => FigmaEmbedPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var FigmaEmbedPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.registerMarkdownPostProcessor(this.figmaEmbedProcessor.bind(this));
  }
  figmaEmbedProcessor(el, ctx) {
    const figmaLinks = el.querySelectorAll(
      'a[href^="https://www.figma.com/"]'
    );
    figmaLinks.forEach((link) => {
      var _a;
      const figmaUrl = link.href;
      const iframe = document.createElement("iframe");
      iframe.src = `https://www.figma.com/embed?embed_host=obsidian&url=${encodeURIComponent(
        figmaUrl
      )}`;
      iframe.classList.add("figmaembed-iframe");
      (_a = link.parentNode) == null ? void 0 : _a.replaceChild(iframe, link);
    });
  }
};

/* nosourcemap */